- scientific app = use simple data structure, array, matrix, counting loop, selection, effeciency is the primary concern, first scientific is fortran but nowaday python is most used
- business app = language that is elaborate report, store decimal num, other operation first language for this is COBOL but now java is more popular
- AI = symbolic computation, use linked list, more flexibility, first program: lISP, now C, R, python
- system program = aka system software, usually low level => no restriction and effeciency, old program: PLIS, BLISS, now C, C++
- web software = www support a huge type of language, php, javascript and use script like html and css

- programming paradigms: style of programming, programming language can be classifited into multiple paradigms
some paradigms concern about execution model such as code into unit along with the state that is modifited by the code yet other are concents mainly with style of the syntax grammar.

- common paradigms: functional, imperative, procedural, declarative, object oriented
    - imperative programming: 
        use state and actions
        von neuman architecture (fetch-execute cycle)
        more effeciency than functional programming
        code into unit
        process in cpu 
        place that they are execution is different from place that they are written
        variable is data that we are going to model.
        assignment statement is a statement that assign value to a variable. example, x = 5
        language = C, C++, Java, fortran,
    
    - functional programming:
        use functions
        instead of having assignment statement, we have function call to execute
        offer simplicity and modularity
        not as effecient as imperative programming
        language = lISP, lisp, R, python, ML, javascript
    
    - procedural programming:
        both imperative and functional programming
        it knows what to do, obey order
        language = ALGO, COBOL, BASIC, Pastcal
    
    - declarative programming:
        collection of facts and rules
        ask question and attempt to answer by counting the facts and rules
        declarative rather than procedural, which mean only what we wanted is important not the procedure
        syntax is different from imperative (dont have to provided all the detail)
        language = Prolog, Eriang
    
    - object oriented programming:
        use objects
        use inheritance and polymorphism and abstraction and encapsulation
        begin with data abstraction with encapsulate process with data object and controls access to data and add inheritance and dynamic binding
        do not consider any language as separated because it provided a strucutre
        its just give a new way to structure the program 
        language = Java, C#